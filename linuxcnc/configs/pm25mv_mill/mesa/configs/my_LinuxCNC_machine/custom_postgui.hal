# Include your custom_postgui HAL commands here
# This file will not be overwritten when you run PNCconf again
# The commands in this file are run after the AXIS GUI (including PyVCP panel) starts

net spindle-0-vel-cmd-rpm-abs      pyvcp.spindle-0-speed-target # datalogger.spindle-speed-commanded 
net spindle-1-vel-cmd-rpm-abs    pyvcp.spindle-1-speed-target # datalogger.spindle-speed-commanded 
net spindle-0-fb-rpm               pyvcp.spindle-0-speed-c # datalogger.spindle-speed-actual 
net spindle-0-fb-rpm-filtered-abs  pyvcp.spindle-0-speed-abs
net spindle-1-fb-rpm-filtered-abs  pyvcp.spindle-1-speed-abs

net spindle-0-at-speed    pyvcp.spindle-0-at-speed-led
net spindle-1-at-speed  pyvcp.spindle-1-at-speed-led
net spindle-0-locked      pyvcp.spindle-0-locked-led

net axes-good           pyvcp.axes-good-led
net spindle-0-good      pyvcp.spindle-0-good-led
net spindle-1-good      pyvcp.spindle-1-good-led
net fault-latch-loopout pyvcp.fault-led
net reset-fault         pyvcp.reset-fault

net probe-in            pyvcp.probe-led

#loadrt scale names=scale.x-vel,scale.y-vel,scale.z-vel
#addf scale.x-vel servo-thread
#addf scale.y-vel servo-thread
#addf scale.z-vel servo-thread

setp scale.x-vel.gain 60
setp scale.y-vel.gain 60
setp scale.z-vel.gain 60

net x-vel-cmd scale.x-vel.in
net y-vel-cmd scale.y-vel.in
net z-vel-cmd scale.z-vel.in
net x-velocity-upm scale.x-vel.out pyvcp.x-velocity-upm datalogger.xvel
net y-velocity-upm scale.y-vel.out pyvcp.y-velocity-upm datalogger.yvel
net z-velocity-upm scale.z-vel.out pyvcp.z-velocity-upm datalogger.zvel

net datalogger-enable pyvcp.datalogger-enable
#net datalogger-enabled datalogger.enable pyvcp.datalogger-enable
#net datalogger-enabled ppmc.0.encoder.03.index-enable pyvcp.datalogger-enabled

net camera-enable pyvcp.camera-enable

net load-haimer halui.mdi-command-00 <= pyvcp.load-haimer
net tool-probe0 halui.mdi-command-01 <= pyvcp.tool-probe0
net tool-probe1 halui.mdi-command-02 <= pyvcp.tool-probe1

net run-disable axisui.run-disable

net machine-is-enabled not.hscam-stop.in
net hs-cam-me-not not.hscam-stop.out or2.hscam-stop.in1
net hs-cam-stop or2.hscam-stop.out chronos_camera.trigger-stop
net hscam-recording chronos_camera.recording pyvcp.hscam-recording

net spindle-0-revs angpos.spindle0.in
setp angpos.spindle0.circum      1.0
setp angpos.spindle0.scale-in    1
setp angpos.spindle0.scale-out     360.0
net c-position angpos.spindle0.out-deg pyvcp.spindle-0-position-c

#net torque1 dmmserial.torque1 pyvcp.spindle-0-torque1
#net torque2 dmmserial.torque2 pyvcp.spindle-0-torque2
net c-position2 dmmserial.pos pyvcp.spindle-0-position-c2

net spindle-0-per-rated-mean dmmserial.per-rated-mean pyvcp.spindle-0-per-rated-mean
net spindle-0-per-rated-peak dmmserial.per-rated-peak pyvcp.spindle-0-per-rated-peak
net spindle-0-per-peak-mean dmmserial.per-peak-mean pyvcp.spindle-0-per-peak-mean
net spindle-0-per-peak-peak dmmserial.per-peak-peak pyvcp.spindle-0-per-peak-peak

net spindle-0-stallwatch pyvcp.spindle-0-stallwatch
net spindle-0-torque-warning pyvcp.spindle-0-torque-warning
net spindle-0-torque-threshold pyvcp.spindle-0-torque-threshold
net spindle-0-max-load pyvcp.spindle-0-max-load
net adaptive-feed pyvcp.adaptive-feed pyvcp.adaptive-feed-1
 
net fuling-power fuling.power pyvcp.spindle-1-power
net fuling-bus-voltage fuling.bus_voltage pyvcp.spindle-1-bus-voltage
net fuling-current fuling.current pyvcp.spindle-1-current
net fuling-torque fuling.torque pyvcp.spindle-1-torque
net fuling-voltage fuling.voltage pyvcp.spindle-1-voltage

net now-hour datalogger.hour pyvcp.now-hour
net now-minute datalogger.minute pyvcp.now-minute
net now-second datalogger.second pyvcp.now-second
net now-millisecond datalogger.millisecond pyvcp.now-millisecond


# The following is to help switch Axis to manual when the VistaCNC pendent is used
# If Axis is in MDI mode the pendent cannot be used for jogging.
# In LinuxCNC before 2.8, jogging with the pendent would cause Axis to switch to manual mode.
# Something changed in LinuxCNC 2.8 that keeps one in MDI mode ignoring the pendent.
# For the pendent to work in LinuxCNC 2.8, one must switch to the Manual tab.
# The following code helps to correct this, but requires changes to Axis.

# Check for movement from the pendent in step mode.
net jog-counts conv-s32-float.0.in
net jog-counts-f conv-s32-float.0.out ddt.0.in
net jog-counts-deriv ddt.0.out abs.0.in
net jog-counts-deriv-abs abs.0.out wcomp.0.in
setp wcomp.0.min 0
setp wcomp.0.max 100000000
net is-jogging wcomp.0.out

# Check for a pendent switch to step mode on any axis.
# The pendent holds these inputs high until leaving step mode, so we
# use oneshot to create a pulse.
net axis.0.jog-en logic.1.in-00
net axis.1.jog-en logic.1.in-01
net axis.2.jog-en logic.1.in-02
net axis.any.jog-en logic.1.or oneshot.1.in
setp oneshot.1.width 1

# Combine the possible pendent jogging indicators.
net jog.0.cont-plus  logic.0.in-00
net jog.0.cont-minus logic.0.in-01
net jog.1.cont-plus  logic.0.in-02
net jog.1.cont-minus logic.0.in-03
net jog.2.cont-plus  logic.0.in-04
net jog.2.cont-minus logic.0.in-05
net axis.any.jog-en-pulse oneshot.1.out logic.0.in-06
net is-jogging logic.0.in-07

# Create a pulse to Axis requesting manual mode.
net pendent-request-manual-pulse logic.0.or oneshot.0.in
setp oneshot.0.width 1
net pendent-request-manual oneshot.0.out axisui.set-manual-mode

